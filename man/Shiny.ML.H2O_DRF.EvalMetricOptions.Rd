% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ShinyML.R
\name{Shiny.ML.H2O_DRF.EvalMetricOptions}
\alias{Shiny.ML.H2O_DRF.EvalMetricOptions}
\title{Shiny.ML.H2O_DRF.EvalMetricOptions}
\usage{
Shiny.ML.H2O_DRF.EvalMetricOptions(TT)
}
\arguments{
\item{TT}{Target Type: 'regression', 'classification', 'multiclass', all lower case}
}
\description{
Eval Metrics
}
\seealso{
Other ML: 
\code{\link{ARFIMA_Modal_Fun}()},
\code{\link{CatBoostCARMA_Modal_Fun}()},
\code{\link{CatBoost_Modal_Fun}()},
\code{\link{CausalMediation_Modal_Fun}()},
\code{\link{ETS_Modal_Fun}()},
\code{\link{H2O_DRF_Modal_Fun}()},
\code{\link{H2O_GBM_Modal_Fun}()},
\code{\link{H2O_GLM_Modal_Fun}()},
\code{\link{H2O_HGLM_Modal_Fun}()},
\code{\link{LightGBMCARMA_Modal_Fun}()},
\code{\link{LightGBM_Modal_Fun}()},
\code{\link{NNET_Modal_Fun}()},
\code{\link{Sarima_Modal_Fun}()},
\code{\link{Shiny.ML.CatBoost.EvalMetricOptions}()},
\code{\link{Shiny.ML.CatBoost.GridEvalMetricsOptions}()},
\code{\link{Shiny.ML.CatBoost.LossFunctionOptions}()},
\code{\link{Shiny.ML.CatBoost_Params}()},
\code{\link{Shiny.ML.Evaluation.Table}()},
\code{\link{Shiny.ML.H2O.DistributionOptions}()},
\code{\link{Shiny.ML.H2O.GLM.DistributionOptions}()},
\code{\link{Shiny.ML.H2O.LinkOptions}()},
\code{\link{Shiny.ML.H2O_DRF_Params}()},
\code{\link{Shiny.ML.H2O_GBM.EvalMetricOptions}()},
\code{\link{Shiny.ML.H2O_GBM_Params}()},
\code{\link{Shiny.ML.H2O_GLM.EvalMetricOptions}()},
\code{\link{Shiny.ML.H2O_GLM_Params}()},
\code{\link{Shiny.ML.H2O_HGLM_Params}()},
\code{\link{Shiny.ML.LightGBM.LossFunctionOptions}()},
\code{\link{Shiny.ML.LightGBM_Params}()},
\code{\link{Shiny.ML.ModelDataObjects}()},
\code{\link{Shiny.ML.Scoring}()},
\code{\link{Shiny.ML.Trainer}()},
\code{\link{Shiny.ML.XGBoost.EvalMetricOptions}()},
\code{\link{Shiny.ML.XGBoost.LossFunctionOptions}()},
\code{\link{Shiny.ML.XGBoost_Params}()},
\code{\link{TBATS_Modal_Fun}()},
\code{\link{XGBoostCARMA_Modal_Fun}()},
\code{\link{XGBoost_Modal_Fun}()}
}
\author{
Adrian Antico
}
\concept{ML}
