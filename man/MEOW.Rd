% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ShinyML.R
\name{MEOW}
\alias{MEOW}
\title{MEOW}
\usage{
MEOW(
  data = NULL,
  TargetType = "regression",
  TargetVariable = NULL,
  RandomEffects = NULL,
  FixedEffects = NULL,
  Lmer = FALSE,
  LmerType = "add",
  PolyN = NULL,
  Nest = NULL,
  CollapseEPV = TRUE,
  KeepSubStats = FALSE,
  Debug = FALSE
)
}
\arguments{
\item{data}{= NULL}

\item{TargetType}{= 'regression', 'classification', 'multiclass'}

\item{TargetVariable}{= NULL}

\item{RandomEffects}{= NULL}

\item{FixedEffects}{= NULL}

\item{Lmer}{= FALSE,}

\item{LmerType}{= 'add',}

\item{PolyN}{NULL. Add a numeric value to use poly(FixedEffect, PolyN) in the mixed effects adjustment for fixed effects. Only allowed when length(FixedEffects) == 1}

\item{Nest}{Specify the outer and inner variable numbers. Function checks for successive numbers (1,2), (2,3), ... (N-1,N).  c(1,2)}

\item{CollapseEPV}{CollapseEPV == TRUE gives you a constant EPV, otherwise it remains varied}

\item{KeepSubStats}{= FALSE}

\item{Debug}{= FALSE}
}
\description{
Mixed Effects Offset Weighting
}
\examples{
\dontrun{
# Pull data and set vars to factors
data <- data.table::fread(file = "C:/Users/Bizon/Documents/GitHub/gpa.csv"); data[, student := as.factor(student)];data[, semester := as.factor(semester)]
data[, year := as.factor(year)]
data[, student := as.factor(student)]
data[, semester := as.factor(semester)]
data[, Mean := mean(gpa), by = c('sex','semester','year','student')]

# Run function
TestModel <- AutoQuant::AutoCatBoostRegression(

  # GPU or CPU and the number of available GPUs
  task_type = 'GPU', NumGPUs = 1,
  OutputSelection = c('Importances', 'EvalMetrics', 'Score_TrainData'),
  ReturnModelObjects = TRUE,

  # Data args
  data = data, model_path = getwd(),
  TargetColumnName = 'gpa',
  FeatureColNames = c('sex','semester','year'),
  IDcols = setdiff(names(data), c('sex','semester','year','gpa')),

  # ML args
  Trees = 250, RandomStrength = 1, RSM = 1, GrowPolicy = 'SymmetricTree',
  Depth = 9,
  L2_Leaf_Reg = 10,
  model_size_reg = 2)

Output <- Quantico::MEOW(
  data = TestModel$TrainData,
  TargetType = 'regression',
  TargetVariable = TestModel$ArgsList$TargetColumnName,
  RandomEffects = 'student', # c('sex','semester','year','student'),
  FixedEffects = 'Predict',
  Nest = NULL,
  CollapseEPV = TRUE,
  KeepSubStats = FALSE,
  Lmer = FALSE,
  LmerType = 'add',
  PolyN = NULL,
  Debug = FALSE)

Output <- Quantico::MEOW(
  data = Output$data,
  TargetType = 'regression',
  TargetVariable = TestModel$ArgsList$TargetColumnName,
  RandomEffects = 'student', # c('sex','semester','year','student'),
  FixedEffects = 'Predict',
  Nest = NULL,
  CollapseEPV = TRUE,
  KeepSubStats = FALSE,
  Lmer = TRUE,
  LmerType = 'add',
  PolyN = NULL,
  Debug = FALSE)

}

}
\seealso{
Other Mixed Effects: 
\code{\link{EffectsInterval}()},
\code{\link{FastLM}()},
\code{\link{LMER}()},
\code{\link{PredictionIntervals}()},
\code{\link{REsim}()}
}
\author{
Adrian Antico
}
\concept{Mixed Effects}
