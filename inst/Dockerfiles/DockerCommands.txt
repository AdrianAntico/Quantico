
# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
# Dockerfile testing and implementing
# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

# Removing old images and containers

0. Open Windows Terminal >_ icon and open ubuntu terminal

1. cd to folder with dockerfile

2. command away!

- start docker
  cmd: "C:\Program Files\Docker\Docker\DockerCli.exe" -SwitchDaemon

- remove all images: 
  cmd: docker system prune -a

- build image:
  cmd: (Doug) docker build -f Dockerfile -t dockerfile/dockerfile:latest .
  cmd: (Rapp) docker build -f Rappture.dockerfile -t rappture/rappture:latest .
  cmd: (Gen) docker build -f {DockerfileName} - t lowercasename/lowercasename:latest .

- run container:
  cmd: (Doug) docker run -p 80:80 dockerfile/dockerfile:latest .
  cmd: (Rapp) docker run -p 80:80 dockerfile/dockerfile:latest .
  cmd: (Gen) docker run -p 80:80 dockerfile/dockerfile:latest .

- stop containers: 
  cmd: docker container ls (to get name, weird name)
  cmd: docker stop <container name: user weird name>
  cmd: docker rm <container name: user weird name>




# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
# Azure App Service Implementation
# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

1. download azure cli (if you don't have it)
2. login with: az login
3. create container registry
4. admin user must be enabled in the left menu under access keys
5. docker image must have an appropriate tag before pushing or get error
   note: acrname = azure container registry name
   cmd: docker tag <imageid> <acrname>.azurecr.io/<dockerfilename:tag>
6. login to container registry from cli 
   cmd: az acr login -n <acrname>
   cmd: docker push <newtag>
7. Create web service
8. Utilize container registry
9. Select image







# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
# Scratch Pad
# @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

docker build -f Test2.Dockerfile -t test2/test2:latest .
docker build -f RemixAutoML_Apps.dockerfile -t test420/test420:latest .
docker build -f rocker_test.dockerfile -t rocker_test/rocker_test:latest .

# tag
remixautomldockerfile:latest

# push to docker hub
docker push remixautoml/remixautoml:latest

# Run docker container
docker run --rm -p 3838:3838 rocker_test/rocker_test:latest
docker run -p 80:80 remixautoml/remixautoml:latest
docker run -p 80:80 rocker_test/rocker_test:latest .


# List open containers
docker container ls

# Stop container
docker stop 826f8cf7fd57

# Login to docker hub
docker login -u remixautoai -p Inversion2!

# pull down image
docker pull remixautoai/remixautoai:latest

# Change tag for aws ecs
docker tag remixautoai/remixautoai:latest 896234167532.dkr.ecr.us-east-1.amazonaws.com/remixautoai:latest

# push to aws registry
docker push 896234167532.dkr.ecr.us-east-1.amazonaws.com/remixautoai:latest

# Get aws credentials - in command prompt
aws ecr get-login --region us-east-1 --no-include-email

# aws login credentials - in docker
docker login -u AWS -p eyJwYXlsb2FkIjoicWRqd0hRQk5DVmxNV1E5YWJUdGpDVmpDYTBLT3FBa1BxbjBCQWhNVlVlb3NpTmdhN2QxSEhWNThWVjcrMlJVK0NtSXBtenFoNy85VzdOSTVqME9BQmhXZDVRamtPNW5iajFNd0ZDb3dwUTdxbFhDUHVERXZRVitpRnlkb0hrdm81MkdZTVc1NUJ1ZGpsMXhiTnE3NG5QZDBpY21LRzNrQ3JvWjMrY1I2TnVEak56TklzUFFXRjAyelRBTjZJTjZZc3R3cmE0QU1oT1lTMEJzK1Rack1jTlRoellWRm1uUkZlNnhLV1BSLzFsWUVLN09QT3EyUnZ2OHVBT0Z2cjJEeWlNZkkzNHpGTUdFL3l4UnA3VzBoVzVuMEtDdEdnZTJCMHFMb29uRnE5ci91TjhNeTNVdGhrM01NVjc0U1NwZWQ1b1ROajFreTEzdWhuUDU2UUpUMFlrR2w3TnY1V3hLdkhHZEZUYzFkQ2JDeGpNVm92c1ZGRDdwV21lTGtYNDM5SjFjbHcyMDRWR0Z5YmZXeFNBa3RVTjR3MDdEMVp3VDdUWHZlOHA0YkU5UmJSSTBTcWl3S0pJTkQvcmRxWklvWk85bmFXNWNDK2lNZjdQUUNUL1FXOEM2SXBhL3VzOC9sUzR1WmZVVmlkeGowZ1ZQcldOSVgxL3JBQ1A5UmE2ZnBhSlFSaDR3ZFIvS0NyZm5BbDVOOUF5Q1c2VFkxcW1QSTQrNEp5SzEvWWEvdFpxQ2VWMlVZZSt0cTcvaU1aRmYramdkMWRBaVNoZVJzc1lrM1NtVFMxOGpJS3dRSEVZSG0yVittYmhhanhHYjBoRVU1Tk8rNmp4dmZIVGpiSWVVNVE3ZUZGNlhZNzYvdkJkRE92NDk1N29ONUhNZzNyc29pSEp2R0FqNnRndWxyRGIvMFhkYUkxK0tTM3VjejRjYUhTbkQ2TWRXWnFhWEpGQjF0bDliN2lGNkdwWitVUklQdldMVFllUmNwRmhKNnFja2VKMHBOQ2wxOThIdjhKTXZiYlZGWDlUUHFjZy9tOTNjUklJd2NYMllHdUtZVUZVUEhGUTF1Z1lnRGlkaVJYYm5yR0F2elRtMExGWXAzN0luQTZqM3Vic1RoNXNZaFg5bFlQUGZRWU9pRVpEUXBoZVlJOEJHK1A5VDArMVFDY1YxNDd2WkVSd2p0aHNxZU5HWDljaHYrQ243UW9YcWpEYjRqWmo0ZElFN2hUZDZVa3doSzBsVjdpRlo1a0hpQ2JiNTdQTFZqUDhxcU1FTncyMTRrS29RNS9EVEUxa3FHN21JeEN3M1lETGtYMkxLakYvYmIxNGtyRzRZMmd4aXMvYjlOY3QxZ3BVM3dncXFwbk8wRHVVdDBua3Zmc0sydFgxaDExeUJVUjhTQlhYWk5CYzFBYlNzMmRyWjJkYlpxV1VSU2hlaDNKVzU2IiwiZGF0YWtleSI6IkFRRUJBSGh3bTBZYUlTSmVSdEptNW4xRzZ1cWVla1h1b1hYUGU1VUZjZTlScTgvMTR3QUFBSDR3ZkFZSktvWklodmNOQVFjR29HOHdiUUlCQURCb0Jna3Foa2lHOXcwQkJ3RXdIZ1lKWUlaSUFXVURCQUV1TUJFRURGb0JDYXlZWWoyUmhxTHIrd0lCRUlBNy8yYmZvWFo3czhSbzlhaUhUbHZSb2hvc24rZVV6MTkvR2tjblpqb2pOLzZDMFJrN2FRMklxc1RzSFNDdzFrTnZsYnFUZGxuZDR3THlXLzQ9IiwidmVyc2lvbiI6IjIiLCJ0eXBlIjoiREFUQV9LRVkiLCJleHBpcmF0aW9uIjoxNTc1Njk3MjgwfQ== https://896234167532.dkr.ecr.us-east-1.amazonaws.com




##############################
##############################
#####    CUDA Start    #######
##############################
##############################

RUN apt-get update && apt-get install -y apt-transport-https

RUN apt-get update && apt-get install -y --no-install-recommends \
    gnupg2 curl ca-certificates && \
    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub | apt-key add - && \
    echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
    echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list && \
    apt-get purge --autoremove -y curl \
    && rm -rf /var/lib/apt/lists/*

RUN CUDA_VERSION=${CUDA_VERSION:-11.1.1}

# For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a
RUN apt-get update && apt-get install -y --no-install-recommends \
    cuda-cudart-11-1=11.1.74-1 \
    cuda-compat-11-1 \
    && ln -s cuda-11.1 /usr/local/cuda && \
    rm -rf /var/lib/apt/lists/*

# Required for nvidia-docker v1
RUN echo "/usr/local/nvidia/lib" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "/usr/local/nvidia/lib64" >> /etc/ld.so.conf.d/nvidia.conf && \
    echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.1/targets/x86_64-linux/lib" >> /etc/profile

## Set all of these as global ENV
# PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}
# LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64

# NVIDIA_VISIBLE_DEVICES=all
# NVIDIA_DRIVER_CAPABILITIES="compute,utility"
# NVIDIA_REQUIRE_CUDA="cuda>=11.1 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 brand=tesla,driver>=450,driver<451"

## runtime ####################################################
## FROM ${IMAGE_NAME}:11.1-base-ubuntu20.04

RUN NCCL_VERSION=${NCCL_VERSION:-2.7.8}

RUN apt-get update && apt-get install -y --no-install-recommends \
    cuda-libraries-11-1=11.1.1-1 \
    libnpp-11-1=11.1.2.301-1 \
    cuda-nvtx-11-1=11.1.74-1 \
    libcublas-11-1=11.3.0.106-1 \
    libnccl2=$NCCL_VERSION-1+cuda11.1 \
    && apt-mark hold libnccl2 \
    && rm -rf /var/lib/apt/lists/*

## devel #######################################################

RUN apt-get update && apt-get install -y --no-install-recommends \
    cuda-nvml-dev-11-1=11.1.74-1 \
    cuda-command-line-tools-11-1=11.1.1-1 \
    cuda-nvprof-11-1=11.1.105-1 \
    libnpp-dev-11-1=11.1.2.301-1 \
    cuda-libraries-dev-11-1=11.1.1-1 \
    cuda-minimal-build-11-1=11.1.1-1 \
    libnccl-dev=2.7.8-1+cuda11.1 \
    libcublas-dev-11-1=11.3.0.106-1 \
    libcusparse-11-1=11.3.0.10-1 \
    libcusparse-dev-11-1=11.3.0.10-1 \
    && apt-mark hold libnccl-dev \
    && rm -rf /var/lib/apt/lists/*

RUN LIBRARY_PATH=/usr/local/cuda/lib64/stubs



##############################
##############################
#####    CUDA End      #######
##############################
##############################


